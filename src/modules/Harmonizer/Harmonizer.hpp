#include "../../Ahornberg.hpp"

struct Harmonizer : Module {
	constexpr static int NUM_CHANNELS = 16;
	constexpr static int NUM_MIXTURES = 4;
	constexpr static int NUM_HARMONICS = 96;
	static float FREQ_RATIOS[NUM_HARMONICS];
	static bool FREQ_RATIOS_INITIALIZED;
	
	enum ParamIds {
		VELOCITY_GLOBAL_MODULATION_PARAM,
		ENUMS(VELOCITY_MODULATION_PARAM, NUM_CHANNELS),
		ENUMS(VELOCITY_PARAM, NUM_CHANNELS),
		PITCH_GLOBAL_MODULATION_PARAM,
		ENUMS(PITCH_MODULATION_PARAM, NUM_CHANNELS),
		ENUMS(PITCH_HARMONICS_PARAM, NUM_CHANNELS),
		ENUMS(PITCH_SUBHARMONICS_PARAM, NUM_CHANNELS),
		ENUMS(PITCH_FINE_PARAM, NUM_CHANNELS),
		ENUMS(CHANNEL_ACTIVE_PARAM, NUM_CHANNELS),
		ENUMS(MIXTUR_PARAM, NUM_MIXTURES),
		NUM_PARAMS
	};
	enum InputIds {
		GATE_INPUT,
		RETRIGGER_INPUT,
		VELOCITY_INPUT,
		VELOCITY_GLOBAL_MODULATION_INPUT,
		ENUMS(VELOCITY_MODULATION_INPUT, NUM_CHANNELS),
		PITCH_INPUT,
		PITCH_GLOBAL_MODULATION_INPUT,
		ENUMS(PITCH_MODULATION_INPUT, NUM_CHANNELS),
		ENUMS(MIXTUR_INPUT, NUM_MIXTURES),
		NUM_INPUTS
	};
	enum OutputIds {
		GATE_OUTPUT,
		RETRIGGER_OUTPUT,
		VELOCITY_GLOBAL_OUTPUT,
		ENUMS(VELOCITY_OUTPUT, NUM_CHANNELS),
		PITCH_GLOBAL_OUTPUT,
		ENUMS(PITCH_OUTPUT, NUM_CHANNELS),
		NUM_OUTPUTS
	};
	enum LightIds {
		NUM_LIGHTS
	};

	dsp::SchmittTrigger mixtureTriggers[NUM_MIXTURES];

	Harmonizer();
	void setMixture(int mixture);
	int processMixtureTriggers();
	void process(const ProcessArgs& args) override;
};
